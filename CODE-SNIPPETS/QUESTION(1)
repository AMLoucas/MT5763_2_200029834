CODE USED TO ANSWER QUESTION 1 (Is there an effect of Luxuriant above and beyond the placebo?)
..............................................................................................
/* MT5763 */
/* Generated code for Indiviual Project 2 */

/* DROPPING ANY OLD TABLES */
%web_drop_table(WORK.BALDY);
%web_drop_table(WORK.LUXURIANT);
%web_open_table(WORK.PLACEBO);
%web_open_table(WORK.BALDBEGONE);
%web_open_table(WORK.SKINHEADNOMORE);

/* IMPORTING THE CSV FILE WITH NAME: BALDY */
FILENAME REFFILE '/folders/myfolders/sasuser.v94/Practical-Individual/Baldy.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.BALDY;
	GETNAMES=YES;
	GUESSINGROWS=MAX;
RUN;

PROC CONTENTS DATA=WORK.BALDY; 
RUN;
%web_open_table(WORK.BALDY);

/* FUNCTION THAT GETS 5 ARGUMENTS (data,column hair growht, column age, inches to mm formula, treatment used) */
/* Breaks the data table to smaller individual table concerning only 1 treatment. */
/* Sorts each individual table by age */
/* Data will be wrangled/tidy in here in correct format to apply statystical analysis on them */

%MACRO breakTables(dataName, columnHair, columnAge, toMMmeasure, group);

/* Creating individual table for each treatment */

DATA WORK.&columnHair;
SET WORK.&dataName;
KEEP &columnHair &columnAge;
/* Changin hair growth from inches to MM */
&columnHair = &columnHair * &toMMmeasure;
RUN;

/* Renaming the age column to simple Age, Measure of hair growth to HairGrowth */
/* Adding new column group that indicates for which treatments the data is (for mergeing tables later) */
DATA WORK.&columnHair;
SET WORK.&columnHair;
RENAME &columnAge = Age;
RENAME &columnHair = HairGrowth;
GROUP = &group;
RUN;

/* Sorting the data according to the age of patient */
PROC SORT DATA = WORK.&columnHair;
BY HairGrowth;
RUN;

%web_open_table(WORK.&columnHair);

%MEND;

%breakTables(BALDY, LUXURIANT, AgeLuxuriant, 25.4, "LUXURIANT")
%breakTables(BALDY, PLACEBO, AgePlacebo, 25.4, "PLACEBO")
%breakTables(BALDY, BALDBEGONE, AgeBaldBeGone, 25.4, "BALDBEGONE")
%breakTables(BALDY, SKINHEADNOMORE, AgeSkinheadnomore, 25.4, "SKINHEADNOMORE")

/* Merge tables all to one */
DATA WORK.cleanData;
MERGE WORK.LUXURIANT WORK.PLACEBO WORK.BALDBEGONE WORK.SKINHEADNOMORE;
BY HairGrowth;
RUN;

/* For Question -1 */
/* KEEPING ONLY DATA FOR PLACEBO AND LUXURIANT */
DATA WORK.QUESTION1;
SET WORK.cleanData;
KEEP HairGrowth GROUP;
/* KEEP ROWS THAT ARE TREATMENTS FROM LUXURIANT OF PLACEBO */
	WHERE GROUP="LUXURIANT" OR GROUP="PLACEBO";
RUN;

/* FIT A LINEAR MODEL USING THE GROUP AS FACTOR, TO SEE HOW GOOD A TREATMENT IS */
/* OUR P-VALUE WILL CHECK IF OUR TWO MEANS ARE EQUALL. IF NOT EQUAL, THA ONE WITH 
HIGHEST MEAN IS THE BST */


PROC GLM DATA = WORK.QUESTION1 outstat=ERRORS plots = all;
	  CLASS GROUP;
	  MODEL HairGrowth = GROUP;
RUN;
QUIT;
..............................................................................................
ASSUMPTIONS FOR LINEAR MODELLING ARE VIOLATED SO P-VALUE IS NOT TRUSTWORTHY.
WE NEED TO APPLY A RANDOMISED TEST TO CHECK OUR RESULTS
..............................................................................................
..............................................................................................
/* Generated Code (IMPORT) */
/* Source File: Baldy.csv */
/* Source Path: /folders/myfolders/sasuser.v94/Practical-Individual */
/* Code generated on: 17/10/2020 19:40 */

%web_drop_table(WORK.BALDYq1);


FILENAME REFFILE '/folders/myfolders/sasuser.v94/Practical-Individual/Baldy.csv';

PROC IMPORT DATAFILE=REFFILE
	DBMS=CSV
	OUT=WORK.BALDYq1;
	GETNAMES=YES;
RUN;

PROC CONTENTS DATA=WORK.BALDYq1; RUN;


%web_open_table(WORK.BALDYq1);

/* KEEP ONLY PLACEBO, LUXURIANT HAIRGROWTH DATA (ONLY WHAT WE INTERESTED NOW) */
DATA WORK.BALDYq1;
SET WORK.BALDYq1;
KEEP LUXURIANT PLACEBO;

/* CREATING THE LUXURIANT TABLE */
DATA LUXURIANT;
SET WORK.BALDYq1;
GROUP = "LUXURIANT";
LUXURIANT = LUXURIANT * 25.4;
KEEP LUXURIANT GROUP;
RENAME LUXURIANT = HairGrowth;

/* CREATING THE PLACEBO TABLE */
DATA PLACEBO;
SET WORK.BALDYq1;
GROUP = "PLACEBO";
PLACEBO = PLACEBO * 25.4;
KEEP PLACEBO GROUP;
RENAME PLACEBO = HairGrowth;

/* SORTING BOTH TABLES BY HAIRGROWTH TO MERGE THEM */
PROC SORT DATA = WORK.LUXURIANT;
BY HairGrowth;
RUN;

PROC SORT DATA = WORK.PLACEBO;
BY HairGrowth;
RUN;

/* MERGE BOTH TABLES TOGETHER NOW */
DATA WORK.BALDYQ1;
MERGE WORK.LUXURIANT WORK.PLACEBO;
BY HairGrowth;
RUN;

/* NEED TO SORT NEW TABLE BY GROUP SO MEANS CAN BE OBTAINED */
PROC SORT DATA = WORK.BALDYQ1;
BY GROUP;
RUN;

/* WE WILL COMPARE THE DIFFERENT MEANS NOW. */
PROC MEANS data =WORK.BALDYQ1;
VAR HairGrowth; 
BY GROUP;
OUTPUT OUT=OriginalMeans mean=; 
RUN;

DATA WORK.OriginalMeans;
SET WORK.OriginalMeans;
KEEP GROUP HairGrowth;
RUN;

/* Transpose */
PROC TRANSPOSE DATA= WORK.OriginalMeans out = WORK.OriginalMeans;
RUN;

/* GET ORIGINAL DIFFERENCE */
DATA WORK.OriginalMeans;
SET WORK.OriginalMeans;
diff=COL2-COL1; /* following same rule as in original randomisation code above*/
KEEP diff;
RUN;

/* CREATING RANDOM SAME LENGHT ROWS AS RANDOMIZED. */
PROC SURVEYSELECT 
	data=WORK.OriginalMeans 
	out=WORK.OriginalMeans 
	seed=2345
	METHOD=urs 
	noprint 
	sampsize=1 
	outhits rep=200; 
RUN;

DATA WORK.OriginalMeans ;
SET WORK.OriginalMeans ;
KEEP diff;
RUN;

/*Pull out the means only */
/* What comes out of PROC MEANS can vary */
/* So may need to adjust code */
DATA WORK.DIFFORIG;
SET WORK.BALDYQ1;
KEEP HairGrowth /* Case important here */
Run;

/* RANDOMIZING THE MEANS NOW */
/* FUNCTION THAT DEALS WITH RANDOMIZATION */
%macro TwoSampRandTest(NumberOfLoops, DataSet, GroupVariable, GroupOneLabel, GroupTwoLabel, ResponseVariable);

/* STARTS LOOP OF RANDOMIZING NUMBEROFLOOPS TIMES */	
%do i=1 %to &NumberOfLoops;

	/* DUMMY DATA SET FOR GROUP VARIABLE */
	data RandomGroup;
		set &DataSet (keep=&GroupVariable);
		RandomIndex=rand('uniform');   
	run;
	
	/* SORTS THE DATA SET BY GROUP */
	proc sort data=RandomGroup out=RandomGroup;
		by RandomIndex;
	run;

	data WorkingData;
		merge RandomGroup(keep=&GroupVariable) &DataSet(drop=&GroupVariable);
	run;

	data WORK.RandomGroup1;
		set WORK.WorkingData;
		where &GroupVariable=&GroupOneLabel;
	data WORK.RandomGroup2;
		set WorkingData;
		where &GroupVariable=&GroupTwoLabel;
	run;

	proc means data=RandomGroup1 noprint;
		var &ResponseVariable;
		output out=GroupOneMean mean=mean;
	run;

	proc means data=RandomGroup2 noprint;
		var &ResponseVariable;
		output out=GroupTwoMean mean=mean;
	run;

	data _NULL_;
		set GroupOneMean;
		call symput('GroupOneMean', mean);
	run;

	data _NULL_;
		set GroupTwoMean;
		call symput('GroupTwoMean', mean);
	run;

	data Temp;
		RandomisedMean=&GroupTwoMean-&GroupOneMean;
	run;

	data ResultHolder;
		%if &i=1 %then %do;
			set Temp;
		%end;
		%else %do;
			set ResultHolder Temp;
		%end;
	run;
	%end;
%mend;



%TwoSampRandTest(NumberOfLoops=200, DataSet=WORK.BALDYQ1, GroupVariable=GROUP, GroupOneLabel="LUXURIANT", GroupTwoLabel="PLACEBO", ResponseVariable=HairGrowth);

/* Join with ResultHolder */
DATA ResultHolder;
MERGE ResultHolder WORK.OriginalMeans;
RUN;

/* Filter the outputs of the randomisation */
data ResultHolder2;
set ResultHolder;
where RandomisedMean >= diff; /* Could be <= */
run;
..............................................................................................